{"ast":null,"code":"var _jsxFileName = \"D:\\\\Bncrentcar\\\\frontend\\\\src\\\\components\\\\NewCustomer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { customersAPI } from '../services/api';\nimport toast from 'react-hot-toast';\nimport { UserPlus, ArrowLeft, Save } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewCustomer = () => {\n  _s();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n\n  // Campi basati sulla tabella 'customers' di schema.sql\n  const [formData, setFormData] = useState({\n    full_name: '',\n    fiscal_code: '',\n    email: '',\n    phone: '',\n    address: '',\n    city: '',\n    zip_code: '',\n    driving_license_number: '',\n    id_card_number: '',\n    notes: ''\n  });\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validazione di base lato client\n    if (!formData.full_name || !formData.fiscal_code || !formData.email || !formData.phone) {\n      toast.error('Per favore, compila tutti i campi obbligatori: Nome, Codice Fiscale, Email e Telefono.');\n      return;\n    }\n    setLoading(true);\n    try {\n      // Chiama il backend\n      const response = await customersAPI.create(formData);\n      toast.success('Cliente creato con successo!');\n      navigate(`/customers/${response.data.data.id}`);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Errore creazione cliente:', error);\n      // ✅ Questa riga è corretta: visualizza il messaggio di errore specifico dal backend\n      toast.error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Errore non specificato nella creazione del cliente');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // ... (JSX del form)\n  return (\n    /*#__PURE__*/\n    // ...\n    _jsxDEV(\"form\", {\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(NewCustomer, \"YNW0EQHy+v4yj8PLdGhEQDid0yw=\", false, function () {\n  return [useNavigate];\n});\n_c = NewCustomer;\nexport default NewCustomer;\nvar _c;\n$RefreshReg$(_c, \"NewCustomer\");","map":{"version":3,"names":["React","useState","useNavigate","customersAPI","toast","UserPlus","ArrowLeft","Save","jsxDEV","_jsxDEV","NewCustomer","_s","navigate","loading","setLoading","formData","setFormData","full_name","fiscal_code","email","phone","address","city","zip_code","driving_license_number","id_card_number","notes","handleChange","e","target","name","value","handleSubmit","preventDefault","error","response","create","success","data","id","_error$response","_error$response$data","console","message","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Bncrentcar/frontend/src/components/NewCustomer.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { customersAPI } from '../services/api';\r\nimport toast from 'react-hot-toast';\r\nimport { UserPlus, ArrowLeft, Save } from 'lucide-react';\r\n\r\nconst NewCustomer = () => {\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n  \r\n  // Campi basati sulla tabella 'customers' di schema.sql\r\n  const [formData, setFormData] = useState({\r\n    full_name: '',\r\n    fiscal_code: '',\r\n    email: '',\r\n    phone: '',\r\n    address: '',\r\n    city: '',\r\n    zip_code: '',\r\n    driving_license_number: '',\r\n    id_card_number: '',\r\n    notes: '',\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Validazione di base lato client\r\n    if (!formData.full_name || !formData.fiscal_code || !formData.email || !formData.phone) {\r\n      toast.error('Per favore, compila tutti i campi obbligatori: Nome, Codice Fiscale, Email e Telefono.');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      // Chiama il backend\r\n      const response = await customersAPI.create(formData); \r\n      \r\n      toast.success('Cliente creato con successo!');\r\n      navigate(`/customers/${response.data.data.id}`); \r\n    } catch (error) {\r\n      console.error('Errore creazione cliente:', error);\r\n      // ✅ Questa riga è corretta: visualizza il messaggio di errore specifico dal backend\r\n      toast.error(error.response?.data?.message || 'Errore non specificato nella creazione del cliente');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // ... (JSX del form)\r\n  return (\r\n    // ...\r\n    <form onSubmit={handleSubmit}>\r\n    {/* ... resto del form */}\r\n    </form>\r\n  )\r\n};\r\n\r\nexport default NewCustomer;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,OAAOC,KAAK,MAAM,iBAAiB;AACnC,SAASC,QAAQ,EAAEC,SAAS,EAAEC,IAAI,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACA,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC;IACvCgB,SAAS,EAAE,EAAE;IACbC,WAAW,EAAE,EAAE;IACfC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE,EAAE;IACXC,IAAI,EAAE,EAAE;IACRC,QAAQ,EAAE,EAAE;IACZC,sBAAsB,EAAE,EAAE;IAC1BC,cAAc,EAAE,EAAE;IAClBC,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BZ,WAAW,CAAC;MACV,GAAGD,QAAQ;MACX,CAACa,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAC5B,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAChCA,CAAC,CAACK,cAAc,CAAC,CAAC;;IAElB;IACA,IAAI,CAAClB,QAAQ,CAACE,SAAS,IAAI,CAACF,QAAQ,CAACG,WAAW,IAAI,CAACH,QAAQ,CAACI,KAAK,IAAI,CAACJ,QAAQ,CAACK,KAAK,EAAE;MACtFhB,KAAK,CAAC8B,KAAK,CAAC,wFAAwF,CAAC;MACrG;IACF;IAEApB,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF;MACA,MAAMqB,QAAQ,GAAG,MAAMhC,YAAY,CAACiC,MAAM,CAACrB,QAAQ,CAAC;MAEpDX,KAAK,CAACiC,OAAO,CAAC,8BAA8B,CAAC;MAC7CzB,QAAQ,CAAC,cAAcuB,QAAQ,CAACG,IAAI,CAACA,IAAI,CAACC,EAAE,EAAE,CAAC;IACjD,CAAC,CAAC,OAAOL,KAAK,EAAE;MAAA,IAAAM,eAAA,EAAAC,oBAAA;MACdC,OAAO,CAACR,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD;MACA9B,KAAK,CAAC8B,KAAK,CAAC,EAAAM,eAAA,GAAAN,KAAK,CAACC,QAAQ,cAAAK,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBF,IAAI,cAAAG,oBAAA,uBAApBA,oBAAA,CAAsBE,OAAO,KAAI,oDAAoD,CAAC;IACpG,CAAC,SAAS;MACR7B,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA;IAAA;IACE;IACAL,OAAA;MAAMmC,QAAQ,EAAEZ;IAAa;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEvB;EAAC;AAEX,CAAC;AAACrC,EAAA,CAzDID,WAAW;EAAA,QACER,WAAW;AAAA;AAAA+C,EAAA,GADxBvC,WAAW;AA2DjB,eAAeA,WAAW;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}